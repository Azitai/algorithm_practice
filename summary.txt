经验：
1、“大体思路”是指程序设计最初的想法，是程序的下手点。它对后面的具体实现起到很好的过度作用。
   “大体思路”的描述形式：要求用步骤明确的标识，并可采用分模块和分层的方法逐块细化描述，
   要一直增加描述的“清晰度”，直到触及到语言的实现，随后自然的转到语言的表述实现过程。
2、在编写算法的过程中，由于清晰度低的描述最终要转换为清晰度高的描述，所以当清晰度低的描述碰
   到困难时，可以大胆的直接采用清晰度高的描述来进行。只要顾全到“一对多规律”带来的忽略其他优等实现的缺陷即可。
3、在整个程序编写过程中，必须明确一个道理：“一对多”规律，即一个要求可能有多个方法，当向前
   确定一步后，就可能忽略了该层的其他实现方法。所以，在实现过程中，要横纵考虑，灵活思
   考，避免漏掉更好的方法。
4、对于利用减治法或分治法或其他得出来的父子模块操作相同的情况，可以有正序和逆序两种描述方式，
   正序会用到循环或是栈，逆序会用到递归语法（逆序描述的具体技巧见“函数递归”）。
5、如果需要自己确定函数的参数和返回值，那么，越早确定对程序的编写越好，一般根据利弊条件确定，
   根据思路自己设计，根据功能需要自己决定，最好在“大体思路”描述之前设计，有时，不一定要确定原
   型的所有参数，可以先确定需要使用的一部分，这样对“大体思路”描述会有好处。总之：能确定多少，
   就尽早确定多少。注意，对于给定原型的函数，要明确返回值，这一点往往容易忽视。
6、边界条件、异常情况、参数检查，这三者是细节，也是重点。异常的处理和参数的判断要在“大体思路”
   思考全局时考虑到。
7、对于复杂问题，可以决定分出子功能函数来解决，子功能函数由自己设计。
8、在运用各种语法实现“大体流程”描述的功能时，最好先用语法的流程控制结构确定框架，然后抓住各种
   流程的特点去思考。
9、在具体书写代码实现时，尽量先在开始处定义需要的辅助变量，这样更规范一些。
10、有些简单函数的“大体思路”是由函数的定义确定好的，可以直接考虑实现问题。
11、对于有些复杂的主题，要进行相关的理论研究，才能得出正确的思路。

具体的编程方法：针对不同的功能函数编写情况，根据上述编程规律和注意点，灵活的确定当前任务。
一步一步走下去，要步步为营，纵横思考。（任何函数的编写步骤都不是一成不变的，也不是只有一条路，
只不过遵循大体的先后顺序，就会更容易的思考和实现，并且准确度更高。）

